{"version":3,"sources":["assets/static_assets.svg","assets/server_cluster.svg","assets/icon_react.svg","assets/progressive_app.svg","assets/modern_design.svg","assets/detailed_analysis.svg","themes/light.ts","themes/dark.ts","globalStyle.ts","data/device.ts","data/sections.ts","page/Header.tsx","data/technologies.ts","components/Card.tsx","page/Main.tsx","page/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","colors","background","cardBackground","buttonBackground","textColor","buttonColor","main","black","light","GlobalStyle","createGlobalStyle","props","theme","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","sections","name","link","HeaderWrapper","styled","header","LogoWrapper","div","Logo","h1","NavigationWrapper","nav","Link","a","ThemeSwitchButton","button","Header","map","key","href","onClick","isDarkModeFunc","role","aria-label","technologies","title","description","src","staticAssets","serverCluster","iconReact","progressiveApp","modernDesign","detailedAnalysis","Wrapper","motion","attrs","initial","scale","opacity","animate","transition","duration","Left","Right","Title","h2","Description","p","Image","img","Card","data","index","Container","WrapperSection","bgColor","TitleSection","Section","section","Main","FooterWrapper","Footer","App","stored","localStorage","getItem","useState","isDarkMode","_setIsDarkMode","lightTheme","darkTheme","setItem","toString","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14aaa1d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/static_assets.0bf1a36b.svg\";","module.exports = __webpack_public_path__ + \"static/media/server_cluster.2ca29cf0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_react.0fd7c3fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/progressive_app.9269a188.svg\";","module.exports = __webpack_public_path__ + \"static/media/modern_design.3cbdda33.svg\";","module.exports = __webpack_public_path__ + \"static/media/detailed_analysis.ba832c7a.svg\";","export default {\r\n  colors: {\r\n    background: \"#FFFFFF\",\r\n    cardBackground: \"#F2F2F2\",\r\n    buttonBackground: \"#3F3D56\",\r\n    textColor: \"#3F3D56\",\r\n    buttonColor: \"#F2F2F2\",\r\n    main: \"#F76D6D\",\r\n    black: \"#060606\",\r\n    light: \"#EEEEEE\"\r\n  }\r\n};\r\n","export default {\r\n  colors: {\r\n    background: \"#111111\",\r\n    cardBackground: \"#111111\",\r\n    buttonBackground: \"#3F3D56\",\r\n    textColor: \"#EEEEEE\",\r\n    buttonColor: \"#F2F2F2\",\r\n    main: \"#F76D6D\",\r\n    black: \"#060606\",\r\n    light: \"#EEEEEE\"\r\n  }\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n      font-family: \"Montserrat\";\r\n  }\r\n\r\n  ::selection {\r\n    color: ${(props: any) => props.theme.colors.background};\r\n    background: ${(props: any) => props.theme.colors.main};\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n  }\r\n  button  {\r\n    outline: none;\r\n    border: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\"\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`\r\n};\r\n","export const sections: Object[] = [\r\n  { name: \"Technologie\", link: \"technologie\" },\r\n  { name: \"Projekty\", link: \"projekty\" },\r\n  { name: \"O mnie\", link: \"omnie\" }\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../data/device\";\r\n\r\nimport { sections } from \"../data/sections\";\r\n\r\nconst HeaderWrapper = styled.header`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: block;\r\n  background-color: ${props => props.theme.colors.background};\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n  float: left;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  margin: 30px 0 0 40px;\r\n  color: ${props => props.theme.colors.textColor};\r\n  &::after {\r\n    content: \"u\";\r\n  }\r\n`;\r\n\r\nconst NavigationWrapper = styled.nav`\r\n  width: 500px;\r\n  float: right;\r\n  margin: 35px 35px 0 0;\r\n  display: none;\r\n\r\n  @media ${device.tablet} {\r\n    display: block;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 650px;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  font-size: 0.8rem;\r\n  padding: 10px;\r\n  margin: 0 30px;\r\n  color: ${props => props.theme.colors.textColor};\r\n\r\n  transition: 0.2s opacity;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst ThemeSwitchButton = styled.button`\r\n  border: none;\r\n  background: ${props => props.theme.colors.buttonColor};\r\n  padding: 5px 15px;\r\n  margin: 0 30px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  display: none;\r\n\r\n  @media ${device.laptop} {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nconst Header = (props: any) => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <LogoWrapper>\r\n        <Logo>Kacper</Logo>\r\n      </LogoWrapper>\r\n      <NavigationWrapper>\r\n        {sections.map(({ link, name }: any) => (\r\n          <Link key={link} href={link}>\r\n            {name}\r\n          </Link>\r\n        ))}\r\n        <ThemeSwitchButton onClick={props.isDarkModeFunc}>\r\n          Mode <span role=\"img\" aria-label=\"Moon\">🌒</span>\r\n        </ThemeSwitchButton>\r\n      </NavigationWrapper>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import staticAssets from \"../assets/static_assets.svg\";\r\nimport serverCluster from \"../assets/server_cluster.svg\";\r\nimport iconReact from \"../assets/icon_react.svg\";\r\nimport progressiveApp from \"../assets/progressive_app.svg\";\r\nimport modernDesign from \"../assets/modern_design.svg\";\r\nimport detailedAnalysis from \"../assets/detailed_analysis.svg\";\r\n\r\nexport const technologies: Object[] = [\r\n  {\r\n    title: \"JavaScript\",\r\n    description: \"HTML, CSS - czego dusza zapragnie\",\r\n    src: staticAssets\r\n  },\r\n  {\r\n    title: \"Backend\",\r\n    description: \"Python - Django oraz Node.js. Nic nie jest mi straszne\",\r\n    src: serverCluster\r\n  },\r\n  {\r\n    title: \"Frameworki\",\r\n    description: \"React, Vue, Electron - wszystko aby spójnie działało\",\r\n    src: iconReact\r\n  },\r\n  {\r\n    title: \"PWA\",\r\n    description:\r\n      \"Progressive Web Application. Instalujesz, i działa offline. Genialne, nieprawdaż?\",\r\n    src: progressiveApp\r\n  },\r\n  {\r\n    title: \"Minimalizm\",\r\n    description: \"Prostota i duże przestrzenie. To jest dziś na trendach.\",\r\n    src: modernDesign\r\n  },\r\n  {\r\n    title: \"Pozycjonowanie\",\r\n    description: \"Wyyysoko w wynikach Google ... i nie tylko\",\r\n    src: detailedAnalysis\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { device } from \"../data/device\";\r\n\r\nconst Wrapper = styled(motion.div).attrs({\r\n  initial: { scale: 0.6, opacity: 0 },\r\n  animate: { scale: 1, opacity: 1 },\r\n  transition: { duration: 0.5 }\r\n})`\r\n  width: 100%;\r\n  height: 300px;\r\n  display: inline-block;\r\n  margin-bottom: 30px;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  color: ${props => props.theme.colors.textColor};\r\n\r\n  @media ${device.mobileL} {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  flex: 1;\r\n  padding: 20px;\r\n  text-align: center;\r\n\r\n  @media ${device.mobileL} {\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  flex: 1;\r\n  padding: 10px;\r\n  margin-left: 25%;\r\n\r\n  @media ${device.mobileL} {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n  font-size: 30px;\r\n\r\n  @media ${device.mobileL} {\r\n    margin: 15% 0 0 10%;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  line-height: 25px;\r\n  margin-left: 0;\r\n  font-weight: bold;\r\n  opacity: 0.7;\r\n\r\n  @media ${device.mobileL} {\r\n    margin-left: 10%;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  max-width: 200px;\r\n\r\n  @media ${device.mobileL} {\r\n    height: 100%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Card = (props: any) => {\r\n  const { title, description, src } = props.data;\r\n  return props.index % 2 ? (\r\n    <Wrapper>\r\n      <Right>\r\n        <Image src={src} />\r\n      </Right>\r\n      <Left>\r\n        <Title>{title}</Title>\r\n        <Description>{description}</Description>\r\n      </Left>\r\n    </Wrapper>\r\n  ) : (\r\n    <Wrapper>\r\n      <Left>\r\n        <Title>{title}</Title>\r\n        <Description>{description}</Description>\r\n      </Left>\r\n      <Right>\r\n        <Image src={src} />\r\n      </Right>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { technologies } from \"../data/technologies\";\r\nimport { device } from \"../data/device\";\r\n\r\nimport Card from \"../components/Card\";\r\n\r\nconst Container = styled.main`\r\n  background-color: ${props => props.theme.colors.background};\r\n`;\r\n\r\ninterface WrapperSection {\r\n  bgColor: any;\r\n  theme: any;\r\n}\r\n\r\nconst WrapperSection: any = styled.div`\r\n  padding: 80px 0 30px 0;\r\n  background-color: ${(props: WrapperSection) =>\r\n    props.bgColor || props.theme.colors.cardBackground};\r\n`;\r\n\r\nconst TitleSection = styled.h1`\r\n  color: ${props => props.theme.colors.textColor};\r\n  text-align: center;\r\n  margin: 0 0 80px 0;\r\n  font-size: 40px;\r\n  display: block;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  width: 100%;\r\n  margin: auto;\r\n  display: block;\r\n\r\n  @media ${device.laptop} {\r\n    max-width: 1000px;\r\n  }\r\n`;\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Container>\r\n      <WrapperSection>\r\n        <TitleSection>Technologie</TitleSection>\r\n        <Section>\r\n          {technologies.map((data: any, index: number) => (\r\n            <Card key={data.title} data={data} index={index}></Card>\r\n          ))}\r\n        </Section>\r\n      </WrapperSection>\r\n      {/*  */}\r\n      <WrapperSection bgColor=\"#F76D6D\">\r\n        <TitleSection>Projekty</TitleSection>\r\n        <Section></Section>\r\n      </WrapperSection>\r\n      {/*  */}\r\n      <WrapperSection>\r\n        <TitleSection>O mnie</TitleSection>\r\n        <Section>Section</Section>\r\n      </WrapperSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../data/device\";\r\n\r\nimport { sections } from \"../data/sections\";\r\n\r\nconst FooterWrapper = styled.header`\r\n  width: 100%;\r\n  height: 500px;\r\n  display: block;\r\n  background-color: ${props => props.theme.colors.black};\r\n  color: ${props => props.theme.colors.light};\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n  float: left;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  margin: 30px 0 0 40px;\r\n  color: ${props => props.theme.colors.light};\r\n  &::after {\r\n    content: \"u\";\r\n  }\r\n`;\r\n\r\nconst NavigationWrapper = styled.nav`\r\n  width: 500px;\r\n  float: right;\r\n  margin: 35px 35px 0 0;\r\n  display: none;\r\n\r\n  @media ${device.tablet} {\r\n    display: block;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 650px;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  font-size: 0.8rem;\r\n  padding: 10px;\r\n  margin: 0 30px;\r\n  color: ${props => props.theme.colors.textColor};\r\n\r\n  transition: 0.2s opacity;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Footer = (props: any) => {\r\n  return (\r\n    <FooterWrapper>\r\n      <LogoWrapper>\r\n        <Logo>Kacper</Logo>\r\n      </LogoWrapper>\r\n      <NavigationWrapper>\r\n        {sections.map(({ link, name }: any) => (\r\n          <Link key={link} href={link}>\r\n            {name}\r\n          </Link>\r\n        ))}\r\n      </NavigationWrapper>\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport lightTheme from \"./themes/light\";\r\nimport darkTheme from \"./themes/dark\";\r\n\r\nimport GlobalStyle from \"./globalStyle\";\r\n\r\nimport Header from \"./page/Header\";\r\nimport Main from \"./page/Main\";\r\nimport Footer from \"./page/Footer\";\r\n\r\nconst App = () => {\r\n  const stored = localStorage.getItem(\"isDarkMode\");\r\n  const [isDarkMode, _setIsDarkMode] = useState(\r\n    stored === \"true\" ? true : false\r\n  );\r\n\r\n  const setIsDarkMode = () => {\r\n    _setIsDarkMode(!isDarkMode);\r\n    localStorage.setItem(\"isDarkMode\", (!isDarkMode).toString());\r\n    console.log(isDarkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkMode ? lightTheme : darkTheme}>\r\n      <GlobalStyle />\r\n      <Header isDarkModeFunc={setIsDarkMode} />\r\n      <Main />\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"typeface-montserrat\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}