{"version":3,"sources":["assets/Color.ts","data/data.ts","pages/index.tsx","pages/skills.tsx","pages/about.tsx","components/navigation.tsx","components/header.tsx","components/socialmedia.tsx","components/footer.tsx","assets/style/global-styles.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Color","repositories","title","description","technologies","lvl","list","Container","styled","div","Head","Rect","Title","h3","Description","Box","Provider","value","style","color","fontSize","Grid","Index","map","el","key","Circle","prg","radius","progress","filterId","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","id","x","y","dx","dy","stdDeviation","floodColor","stroke","strokeLinecap","fill","strokeWidth","strokeDasharray","r","cx","cy","filter","StatusWrapper","position","top","left","Skills","About","Wrapper","Nav","nav","LinkStyle","Link","props","textcontent","AnimLink","posed","hoverable","pressable","init","hover","press","Navigation","flex","margin","to","HeaderStyle","header","Logo","h1","Header","SocialWrapper","a","attrs","href","SocialMedia","Footer","footer","ContactWrapper","Email","transform","GlobalStyles","createGlobalStyle","NoMatch","App","path","exact","component","Boolean","window","location","hostname","match","require","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a82f7457.chunk.js","sourcesContent":["interface Colors {\r\n  readonly primary: string;\r\n  readonly secondary: string;\r\n  readonly dark: string;\r\n  readonly text: string;\r\n  readonly light: string;\r\n  readonly danger: string;\r\n  readonly warning: string;\r\n  readonly success: string;\r\n}\r\n\r\nexport const Color: Colors = {\r\n  primary: \"#43B4FF\",\r\n  secondary: \"#EBF0F3\",\r\n  dark: \"#004A78\",\r\n  text: \"#6991AA\",\r\n  light: \"#FFFFFF\",\r\n  danger: \"#FF4343\",\r\n  warning: \"#FFC743\",\r\n  success: \"#32E16C\",\r\n};\r\n","export const repositories: Object[] = [\r\n  {\r\n    title: \"Portfolio\",\r\n    description: \"Miejsce gdzie można spotkać wszystkie moje prace\"\r\n  },\r\n  {\r\n    title: \"React app\",\r\n    description: \"Aplikacja pogodowa napisana w ReactJS wraz z routerem\"\r\n  },\r\n  {\r\n    title: \"Na kodzie\",\r\n    description: \"Strona internetowa z CMS do wrzucania prezentacji z lekcji\"\r\n  },\r\n  {\r\n    title: \"WebAssembly\",\r\n    description: \"Początki z WebAssembly wraz z językiem Rust\"\r\n  },\r\n  {\r\n    title: \"Rust\",\r\n    description: \"Początki nauki języka Rust, który już mi się podoba\"\r\n  },\r\n  {\r\n    title: \"C++\",\r\n    description: \"Szkolne projekty z lekcji, dla każdego\"\r\n  },\r\n  {\r\n    title: \"Godot game\",\r\n    description: \"Gra oparta z silnika Godot\"\r\n  }\r\n];\r\n\r\nexport const technologies: Object[] = [\r\n  {\r\n    title: \"JavaScript\",\r\n    lvl: 90,\r\n    list: [\"React\", \"Vue\", \"Gatsby\", \"Node.js\", \"TypeScript\"]\r\n  },\r\n  {\r\n    title: \"Python\",\r\n    lvl: 70,\r\n    list: [\"Django\", \"Vue\", \"TypeScript\", \"jQuery\"]\r\n  },\r\n  {\r\n    title: \"HTML\",\r\n    lvl: 100,\r\n    list: [\"Pug\"]\r\n  },\r\n  {\r\n    title: \"CSS\",\r\n    lvl: 85,\r\n    list: [\"SASS\", \"Less\", \"Styled components\"]\r\n  },\r\n  {\r\n    title: \"Rust\",\r\n    lvl: 23,\r\n    list: [\"WebAssembly\"]\r\n  },\r\n  {\r\n    title: \"C++\",\r\n    lvl: 58,\r\n    list: []\r\n  },\r\n  {\r\n    title: \"Dart\",\r\n    lvl: 30,\r\n    list: [\"Flutter\"]\r\n  },\r\n  {\r\n    title: \"Git\",\r\n    lvl: 60,\r\n    list: [\"GitHub\"]\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Color } from \"../assets/Color\";\r\nimport { FaTools } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { repositories } from \"../data/data\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 260px;\r\n  height: 110px;\r\n  padding: 20px;\r\n  background-color: ${Color.light};\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Head = styled.div`\r\n  height: 50px;\r\n`;\r\n\r\nconst Rect = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  padding: 15px;\r\n  background-color: ${Color.primary};\r\n  border-radius: 20px;\r\n  box-shadow: 0 3px 10px ${Color.primary}72;\r\n  float: left;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin: 12px 0 0 20px;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  clear: both;\r\n  margin-top: 20px;\r\n  color: ${Color.text};\r\n  font-size: 15px;\r\n`;\r\n\r\nconst Box = ({ title, description }: any) => {\r\n  return (\r\n    <Container>\r\n      <Head>\r\n        <Rect>\r\n          <IconContext.Provider\r\n            value={{ style: { color: Color.light, fontSize: 20 } }}\r\n          >\r\n            <FaTools />\r\n          </IconContext.Provider>\r\n        </Rect>\r\n        <Title>{title}</Title>\r\n      </Head>\r\n      <Description>{description}</Description>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 1rem;\r\n  margin: 0;\r\n  max-width: 620px;\r\n`;\r\n\r\nfunction Index() {\r\n  return (\r\n    <Grid>\r\n      {repositories.map((el: any) => (\r\n        <Box key={el.title} title={el.title} description={el.description}></Box>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\nexport default Index;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Color } from \"../assets/Color\";\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { technologies } from \"../data/data\";\r\n\r\nconst Circle = ({ radius, progress, filterId }: any) => {\r\n  const normalizedRadius: number = radius - 6 * 2;\r\n  const circumference: number = normalizedRadius * 2 * Math.PI;\r\n\r\n  const strokeDashoffset: number =\r\n    circumference - (progress / 100) * circumference;\r\n\r\n  const statusColor = (prg: number): string => {\r\n    if (prg < 25) return Color.danger;\r\n    else if (prg < 50) return Color.warning;\r\n    else if (prg < 75) return Color.primary;\r\n    else return Color.success;\r\n  };\r\n\r\n  const color: string = statusColor(progress);\r\n\r\n  return (\r\n    <svg height={radius * 2} width={radius * 2}>\r\n      <defs>\r\n        <filter id={filterId} x=\"-1\" y=\"-1\" width=\"300%\" height=\"300%\">\r\n          <feDropShadow\r\n            dx=\"0\"\r\n            dy=\"2\"\r\n            stdDeviation=\"5\"\r\n            floodColor={`${color}72`}\r\n          />\r\n        </filter>\r\n      </defs>\r\n      <circle\r\n        stroke={color}\r\n        strokeLinecap=\"round\"\r\n        fill=\"transparent\"\r\n        strokeWidth={6}\r\n        strokeDasharray={circumference + \" \" + circumference}\r\n        style={{ strokeDashoffset }}\r\n        r={normalizedRadius}\r\n        cx={radius}\r\n        cy={radius}\r\n        filter={`url(#${filterId})`}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  background-color: ${Color.light};\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Head = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StatusWrapper = styled.div`\r\n  position: relative;\r\n  float: left;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin: 40px 0 0 20px;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  flex: 1;\r\n  color: ${Color.text};\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n  line-height: 25px;\r\n  ul {\r\n    list-style: none;\r\n    li:before {\r\n      content: \"+\";\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface BoxProps {\r\n  title: string;\r\n  lvl: string;\r\n  list: string[];\r\n}\r\n\r\nconst Box = ({ title, lvl, list }: BoxProps) => (\r\n  <Container>\r\n    <Head>\r\n      <StatusWrapper>\r\n        <Circle radius={50} progress={lvl} filterId={title} />\r\n        <IconContext.Provider\r\n          value={{\r\n            style: {\r\n              color: Color.dark,\r\n              fontSize: 30,\r\n              position: \"absolute\",\r\n              top: 35,\r\n              left: 35,\r\n            },\r\n          }}\r\n        >\r\n          <FaCode />\r\n        </IconContext.Provider>\r\n      </StatusWrapper>\r\n      <Title>{title}</Title>\r\n    </Head>\r\n    <Description>\r\n      <ul>\r\n        {list.map((el: string) => (\r\n          <li key={`${title}-${el}`}>{el}</li>\r\n        ))}\r\n      </ul>\r\n    </Description>\r\n  </Container>\r\n);\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst Skills = () => (\r\n  <Grid>\r\n    {technologies.map(({ title, lvl, list }: any) => (\r\n      <Box key={title} title={title} lvl={lvl} list={list}></Box>\r\n    ))}\r\n  </Grid>\r\n);\r\nexport default Skills;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Color } from \"../assets/Color\";\r\nimport posed from \"react-pose\";\r\n\r\nimport { IconContext } from \"react-icons\";\r\nimport { TiHome } from \"react-icons/ti\";\r\nimport { IoMdPerson } from \"react-icons/io\";\r\nimport { FaFire } from \"react-icons/fa\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 300px;\r\n  height: 55px;\r\n  border-radius: 20px;\r\n  background-color: ${Color.light};\r\n  padding: 10px;\r\n  margin: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  width: 100%;\r\n  a {\r\n    font-weight: bold;\r\n    color: ${Color.primary};\r\n  }\r\n`;\r\n\r\nconst LinkStyle = styled(Link)<{ textcontent: string }>`\r\n  text-align: center;\r\n  flex: 1;\r\n  text-decoration: none;\r\n  color: ${Color.dark} !important;\r\n\r\n  &::after {\r\n    content: '${props => props.textcontent || \"Empty\"}';\r\n    display: block;\r\n    margin-top: 10px;\r\n    transition: 0.2s;\r\n  }\r\n  &:hover::after {\r\n    transform: translateY(-20px);\r\n  }\r\n  &:nth-child(2)::after {\r\n    content: '${props => props.textcontent || \"Empty\"}';\r\n  }\r\n  &:nth-child(3)::after {\r\n    content: '${props => props.textcontent || \"Empty\"}';\r\n  }\r\n`;\r\n\r\nconst AnimLink = posed(LinkStyle)({\r\n  hoverable: true,\r\n  pressable: true,\r\n  init: { y: 0 },\r\n  hover: { y: -10 },\r\n  press: { y: -5 },\r\n});\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <Wrapper>\r\n      <Nav>\r\n        <IconContext.Provider\r\n          value={{\r\n            style: {\r\n              color: Color.dark,\r\n              fontSize: 35,\r\n              flex: 1,\r\n              margin: `10px 0`,\r\n            },\r\n          }}\r\n        >\r\n          <AnimLink to=\"/\" textcontent=\"Home\">\r\n            <TiHome />\r\n          </AnimLink>\r\n          {/*  */}\r\n          <AnimLink to=\"/skills\" textcontent=\"Technologie\">\r\n            <FaFire />\r\n          </AnimLink>\r\n          {/*  */}\r\n          <AnimLink to=\"/omnie\" textcontent=\"O mnie\">\r\n            <IoMdPerson />\r\n          </AnimLink>\r\n          {/*  */}\r\n        </IconContext.Provider>\r\n      </Nav>\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Navigation;\r\n","import React from \"react\";\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Color } from \"../assets/Color\";\r\n\r\nimport Navigation from \"./navigation\";\r\n\r\nconst HeaderStyle = styled.header`\r\n  width: 100%;\r\n  height: 100px;\r\n`;\r\nconst Logo = styled.h1`\r\n  font-size: 35px;\r\n  margin: 25px;\r\n  span {\r\n    color: ${Color.primary};\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyle>\r\n      <Logo>\r\n        Kacper<span>u</span>\r\n      </Logo>\r\n      <Navigation />\r\n    </HeaderStyle>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Color } from \"../assets/Color\";\r\n\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaFacebook, FaInstagram, FaGithub, FaTwitter } from \"react-icons/fa\";\r\n\r\nconst SocialWrapper = styled.nav`\r\n  display: flex;\r\n  width: Calc(100% - 20px);\r\n  height: auto;\r\n  border-radius: 20px;\r\n  background-color: ${Color.light};\r\n  padding: 10px;\r\n`;\r\n\r\nconst Link = styled.a.attrs(({ href }: any) => ({ href }))`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\nfunction SocialMedia() {\r\n  return (\r\n    <SocialWrapper>\r\n      <IconContext.Provider\r\n        value={{\r\n          style: {\r\n            color: Color.dark,\r\n            fontSize: 30,\r\n            margin: \"10px 0\",\r\n          },\r\n        }}\r\n      >\r\n        <Link href=\"facebook.com\">\r\n          <FaFacebook />\r\n        </Link>\r\n        <Link href=\"facebook.com\">\r\n          <FaInstagram />\r\n        </Link>\r\n        <Link href=\"facebook.com\">\r\n          <FaGithub />\r\n        </Link>\r\n        <Link href=\"facebook.com\">\r\n          <FaTwitter />\r\n        </Link>\r\n      </IconContext.Provider>\r\n    </SocialWrapper>\r\n  );\r\n}\r\n\r\nexport default SocialMedia;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Color } from \"../assets/Color\";\r\n// import posed from \"react-pose\";\r\n\r\nimport { IconContext } from \"react-icons\";\r\nimport { IoMdMailOpen } from \"react-icons/io\";\r\n\r\nimport SocialMedia from \"./socialmedia\";\r\n\r\nconst Footer = styled.footer`\r\n  background: ${Color.dark};\r\n  display: block;\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 400px;\r\n  margin: auto;\r\n  padding: 50px 0;\r\n`;\r\n\r\nconst ContactWrapper = styled.div`\r\n  width: auto;\r\n  background-color: ${Color.light};\r\n  border-radius: 20px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Email = styled.div`\r\n  margin: 20px;\r\n  padding: 20px;\r\n  border: 3px solid ${Color.dark};\r\n  font-weight: bold;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  position: relative;\r\n`;\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <Footer>\r\n      <Wrapper>\r\n        <ContactWrapper>\r\n          <SocialMedia />\r\n          <Email>\r\n            <IconContext.Provider\r\n              value={{\r\n                style: {\r\n                  color: Color.dark,\r\n                  fontSize: 35,\r\n                  position: \"absolute\",\r\n                  top: -25,\r\n                  left: \"50%\",\r\n                  transform: \"translateX(-50%)\",\r\n                },\r\n              }}\r\n            >\r\n              <IoMdMailOpen />\r\n            </IconContext.Provider>\r\n            kacperuczyk@gmail.com\r\n          </Email>\r\n        </ContactWrapper>\r\n      </Wrapper>\r\n    </Footer>\r\n  );\r\n}\r\nexport default Navigation;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { Color } from \"../Color\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: ${Color.secondary};\r\n    color: ${Color.dark};\r\n  }\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: ${Color.secondary};\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${Color.dark};\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: ${Color.dark}BB;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Index from \"./pages/index\";\r\nimport Skills from \"./pages/skills\";\r\nimport About from \"./pages/about\";\r\n\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\n\r\nimport GlobalStyles from \"./assets/style/global-styles\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  max-width: 620px;\r\n`;\r\n\r\nconst NoMatch: React.FC = () => <h1>404</h1>;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <GlobalStyles />\r\n      <Header />\r\n      <Container>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Index} />\r\n            <Route path=\"/skills\" component={Skills} />\r\n            <Route path=\"/omnie\" component={About} />\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </main>\r\n      </Container>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrequire('typeface-montserrat')\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}