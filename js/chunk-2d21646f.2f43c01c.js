(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21646f"],{c27a:function(n,t,e){"use strict";e.r(t);var i=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("v-content",[e("v-container",{attrs:{fluid:""}},[e("v-row",{attrs:{dense:""}},[n._l(n.cards,(function(t){return e("Card",n._b({key:t.title},"Card",t,!1))})),e("Implementation",{attrs:{implement:n.implement}})],2)],1)],1)},a=[],o=e("ae8d"),r=e("b7d0"),s={name:"Selectionsort",components:{Card:o["a"],Implementation:r["a"]},data:function(){return{cards:[{title:"Selection sort",subtitle:"Sortowanie przez wybieranie",flex:12,content:"Jedna z prostszych metod sortowania o złożoności O(n2). Polega na wyszukaniu elementu mającego się znaleźć na żądanej pozycji i zamianie miejscami z tym, który jest tam obecnie. Operacja jest wykonywana dla wszystkich indeksów sortowanej tablicy."},{title:"Opis",subtitle:"",flex:12,content:"Algorytm przedstawia się następująco: <br /> <br />\n          1. Wyszukaj minimalną wartość z tablicy spośród elementów od i do końca tablicy <br />\n          2. Zamień wartość minimalną, z elementem na pozycji i <br /> <br />\n          Gdy zamiast wartości minimalnej wybierana będzie maksymalna, wówczas tablica będzie posortowana od największego do najmniejszego elementu. Algorytm jest niestabilny. Przykładowa lista to: [2a,2b,1] → [1,2b,2a] (gdzie 2b=2a)"}],images:[{src:"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.w3resource.com%2Fw3r_images%2Fselection-short.png&f=1&nofb=1",alt:"Obrazek przedstawiający sortowanie przez wybieranie"},{src:"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fwww.codenuclear.com%2Fwp-content%2Fuploads%2F2017%2F08%2FSelection_Sort.jpg&f=1&nofb=1",alt:"Obrazek przedstawiający sortowanie przez wybieranie"},{src:"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fhe-s3.s3.amazonaws.com%2Fmedia%2Fuploads%2F2888f5b.png&f=1&nofb=1",alt:"Obrazek przedstawiający sortowanie przez wybieranie"}],implement:[{lang:"c++",code:'#include <iostream>\n\nusing namespace std;\n\nconst int n = 10;\nint t[n] = {4,3,6,8,7,9,0,1,2,5};\n\nvoid print(int t[], int n)\n{\n    for(int i=0; i<n; i++) cout << t[i] << " ";\n    cout << endl;\n}\n\nvoid selectionSort(int t[], int n)\n{\n\n    for (int i=0; i<n; i++)\n    {\n        int mini = i;\n        for (int j=i; j<n; j++) if(t[mini] > t[j]) mini = j;\n        swap(t[i], t[mini]);\n    }\n}\n\nint main()\n{\n    print(t, n);\n\n    selectionSort(t, n);\n    print(t, n);\n    return 0;\n}'},{lang:"python",code:"def selectionSort():\n  print('Hello world')"}]}}},c=s,l=e("2877"),m=e("6544"),d=e.n(m),w=e("a523"),p=e("a75b"),u=e("0fd9b"),b=Object(l["a"])(c,i,a,!1,null,null,null);t["default"]=b.exports;d()(b,{VContainer:w["a"],VContent:p["a"],VRow:u["a"]})}}]);
//# sourceMappingURL=chunk-2d21646f.2f43c01c.js.map